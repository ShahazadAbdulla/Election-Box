#include <Wire.h>#include <LiquidCrystal_I2C.h>#include <Adafruit_Fingerprint.h>#include <Keypad.h>#include <SoftwareSerial.h>// LCD SetupLiquidCrystal_I2C lcd(0x27, 16, 2);  // Address 0x27, 16 cols, 2 rows// Fingerprint Sensor Setup#define rxPin 2  // Fingerprint sensor RX#define txPin 3  // Fingerprint sensor TXSoftwareSerial mySerial(rxPin, txPin);Adafruit_Fingerprint finger = Adafruit_Fingerprint(&mySerial);// Keypad Setupconst byte ROWS = 4;const byte COLS = 4;char keys[ROWS][COLS] = {  {'1', '2', '3', 'A'},  {'4', '5', '6', 'B'},  {'7', '8', '9', 'C'},  {'*', '0', '#', 'D'}  // 'D' is Enter};byte rowPins[ROWS] = {4, 5, 6, 7};byte colPins[COLS] = {8, 9, 10, 11};Keypad keypad = Keypad(makeKeymap(keys), rowPins, colPins, ROWS, COLS);int userID = 0;int votes[4] = {0, 0, 0, 0};void setup() {  Serial.begin(9600);  mySerial.begin(57600);    lcd.init();  lcd.backlight();  lcd.clear();  lcd.setCursor(0, 0);  lcd.print("Election Box");  delay(2000);  lcd.clear();  if (finger.verifyPassword()) {    Serial.println("Fingerprint sensor found!");    lcd.setCursor(0, 0);    lcd.print("Fingerprint OK");  } else {    Serial.println("Sensor NOT found!");    lcd.setCursor(0, 0);    lcd.print("Sensor ERROR!");    while (1);  }  authenticateAdmin();}void loop() {  Serial.println("\nChoose: A (Enroll), B (Vote), C (Results)");  lcd.clear();  lcd.setCursor(0, 0);  lcd.print("A:Enroll B:Vote");  lcd.setCursor(0, 1);  lcd.print("C:Results");  char choice = waitForKeypress();  if (choice == 'A') {    enrollFingerprint();  } else if (choice == 'B') {    vote();  } else if (choice == 'C') {    displayResults();  }}// ADMIN LOGINvoid authenticateAdmin() {  Serial.println("\nEnter PIN & Press D:");  lcd.clear();  lcd.setCursor(0, 0);  lcd.print("Enter PIN:");  String pin = "";  while (pin.length() < 4) {    char c = waitForKeypress();    if (c >= '0' && c <= '9') {      pin += c;      Serial.print("*");      lcd.setCursor(pin.length(), 1);      lcd.print("*");  // Mask PIN    }  }  if (pin == "0000") {    Serial.println("\nAccess Granted.");    lcd.clear();    lcd.setCursor(0, 0);    lcd.print("Access Granted!");    delay(2000);  } else {    Serial.println("\nIncorrect PIN!");    lcd.clear();    lcd.setCursor(0, 0);    lcd.print("Incorrect PIN!");    delay(2000);    authenticateAdmin();  }}// ENROLL FINGERPRINTvoid enrollFingerprint() {  int enteredID = 0;  while (true) {      Serial.println("\nEnter ID (1-127) & D:");    lcd.clear();    lcd.setCursor(0, 0);    lcd.print("Enter ID:");    String idInput = "";    while (true) {      char c = waitForKeypress();      if (c >= '0' && c <= '9') {        idInput += c;        Serial.print(c);        lcd.setCursor(idInput.length(), 1);        lcd.print(c);      } else if (c == 'D') {        break;      }    }    enteredID = idInput.toInt();    if (enteredID >= 1 && enteredID <= 127) {      Serial.print("\nSaving to ID: ");      Serial.println(enteredID);      lcd.clear();      lcd.setCursor(0, 0);      lcd.print("Saving ID:");      lcd.setCursor(10, 0);      lcd.print(enteredID);      break;    } else {      Serial.println("\nInvalid ID!");      lcd.clear();      lcd.setCursor(0, 0);      lcd.print("Invalid ID!");      delay(2000);    }  }  userID = enteredID;  Serial.println("Place finger...");  lcd.clear();  lcd.setCursor(0, 0);  lcd.print("Place Finger...");  if (captureFingerprint(userID)) {    Serial.println("Fingerprints Matched!");    lcd.clear();    lcd.setCursor(0, 0);    lcd.print("Fingerprint OK!");    delay(2000);  } else {    Serial.println("Enrollment Failed!");    lcd.clear();    lcd.setCursor(0, 0);    lcd.print("Enroll Failed!");    delay(2000);  }}// VOTING FUNCTIONvoid vote() {  Serial.println("Place finger to vote");  lcd.clear();  lcd.setCursor(0, 0);  lcd.print("Place Finger...");  int voterID = matchFingerprint();  if (voterID > 0) {    Serial.println("Fingerprint matched!");    lcd.clear();    lcd.setCursor(0, 0);    lcd.print("ID: ");    lcd.setCursor(4, 0);    lcd.print(voterID);    lcd.setCursor(0, 1);    lcd.print("Vote: 1 2 3 4");    char voteChoice = waitForKeypress();    if (voteChoice >= '1' && voteChoice <= '4') {      votes[voteChoice - '1']++;      Serial.println("Vote registered!");      lcd.clear();      lcd.setCursor(0, 0);      lcd.print("Vote Success!");      delay(2000);    }  } else {    Serial.println("Fingerprint NOT recognized!");    lcd.clear();    lcd.setCursor(0, 0);    lcd.print("Not Recognized!");    delay(2000);  }}// DISPLAY RESULTSvoid displayResults() {  Serial.println("\n--- RESULTS ---");  lcd.clear();  for (int i = 0; i < 4; i++) {    Serial.print("Party ");    Serial.print(i + 1);    Serial.print(": ");    Serial.println(votes[i]);    lcd.setCursor(0, i);    lcd.print("P");    lcd.print(i + 1);    lcd.print(": ");    lcd.print(votes[i]);  }  delay(5000);}// HELPER FUNCTIONSbool captureFingerprint(int id) {  int p = finger.getImage();  if (p != FINGERPRINT_OK) return false;  p = finger.image2Tz(1);  if (p != FINGERPRINT_OK) return false;  return (finger.createModel() == FINGERPRINT_OK);}int matchFingerprint() {  int p = finger.getImage();  if (p != FINGERPRINT_OK) return -1;  p = finger.image2Tz(1);  if (p != FINGERPRINT_OK) return -1;  p = finger.fingerFastSearch();  return (p == FINGERPRINT_OK) ? finger.fingerID : -1;}char waitForKeypress() {  char key;  while (true) {    key = keypad.getKey();    if (key) return key;  }}